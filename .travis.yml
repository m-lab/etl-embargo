# Travis configuration for etl-embargo.

language: go

go:
  - 1.8

before_install:
# Coverage tools
- go get github.com/mattn/goveralls
- go get github.com/wadey/gocovmerge

- echo Branch is ${TRAVIS_BRANCH} and Tag is $TRAVIS_TAG

# Install gcloud, for integration tests.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- source "${HOME}/google-cloud-sdk/path.bash.inc"

- if [[ -n "$SERVICE_ACCOUNT_mlab_testing" ]] ; then
  echo "$SERVICE_ACCOUNT_mlab_testing" > $TRAVIS_BUILD_DIR/creds.json ;
  export GOOGLE_APPLICATION_CREDENTIALS=$TRAVIS_BUILD_DIR/creds.json ;
  fi

# These directories will be cached on successful "script" builds, and restored,
# if available, to save time on future builds.
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

script:
- go test -v -coverpkg=./... -coverprofile=embargo.cov github.com/m-lab/etl-embargo

# Coveralls
- $HOME/gopath/bin/goveralls -coverprofile=embargo.cov -service=travis-ci

# Clean build and prepare for deployment
- cd $TRAVIS_BUILD_DIR/deploy && go build
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- go get google.golang.org/appengine

#################################################################################
# Deployment Section
#
#  Overview:
#   1.  Test in sandbox during development
#   2.  Deploy to staging on commit to master branch
#   3.  Deploy to prod when a branch is tagged with prod-*
#
#  We want to soak all code in staging before deploying to prod.  To avoid
#  incompatible components, we deploy ALL elements to sandbox when we merge
#  to integration branch.
#
#  Deployments to prod are done by deliberately tagging a specific commit,
#  typically in the master branch, with a tag starting with prod-*.
#  DO NOT just tag the latest version in integration, as someone may have
#  pushed new code that hasn't had a chance to soak in staging.
#
#
# Deploy steps never trigger on a new Pull Request. Deploy steps will trigger
# on specific branch name patterns, after a merge to integration, or on
# an explicit tag that matches "on:" conditions.
#################################################################################

deploy:
######################################################################
#  Sandbox deployments
#  - before code review for development code in a specific branch.
######################################################################

- provider: script
  script:
    $TRAVIS_BUILD_DIR/travis/activate_service_account.sh SERVICE_ACCOUNT_mlab_sandbox
    && $TRAVIS_BUILD_DIR/travis/deploy_app.sh mlab-sandbox
    SERVICE_ACCOUNT_mlab_sandbox $TRAVIS_BUILD_DIR/deploy app.yaml
  skip_cleanup: true
  on:
    repo: m-lab/etl-embargo
    all_branches: true
    condition: $TRAVIS_BRANCH == sandbox-*
